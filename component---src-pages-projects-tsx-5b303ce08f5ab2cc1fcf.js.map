{"version":3,"sources":["webpack:///./src/components/projectcard.tsx","webpack:///./src/pages/projects.tsx"],"names":["Card","title","body","githubUrl","liveSiteUrl","image","CardOuter","CardImage","style","width","height","fixed","CardBody","CardFooter","CardFooterDivider","href","icon","faGithub","styled","div","colors","primary","img","CardContainer","size","laptop","query","BlogIndex","data","location","regoImage","childImageSharp","blogImage","weatherImage","soccerImage","popImage"],"mappings":"kPA8CeA,EAnCF,SAAC,GAA+D,IAA9DC,EAA8D,EAA9DA,MAAOC,EAAuD,EAAvDA,KAAuD,IAAjDC,iBAAiD,MAArC,GAAqC,MAAjCC,mBAAiC,MAArB,GAAqB,MAAhBC,aAAgB,MAAR,GAAQ,EAEzE,OACA,kBAACC,EAAD,KACI,kBAACC,EAAD,KACKF,EAAQ,kBAAC,IAAD,CAAOG,MAAS,CAACC,MAAO,QAASC,OAAQ,SAAUC,MAASN,EAAMM,QAAW,IAG1F,kBAACC,EAAD,KACI,4BAAKX,GACL,8BACKC,IAGT,kBAACW,EAAD,KACKT,EACD,kBAACU,EAAD,KACE,uBAAGC,KAAQX,GAAX,qBAEA,GAEAD,EACF,6BACI,uBAAGY,KAAQZ,GAAX,UACW,kBAAC,IAAD,KAAe,kBAAC,IAAD,CAAiBa,KAAQC,MAAxC,OAGb,MAWRX,EAAaY,IAAOC,IAAX,4EAAID,CAAJ,6HAGKE,IAAOC,SAOrBT,EAAWM,IAAOC,IAAV,2EAAGD,CAAH,gCAIRX,EAAYW,IAAOC,IAAV,4EAAGD,CAAH,yDAUTL,GALaK,IAAOI,IAAV,6EAAGJ,CAAH,gDAKGA,IAAOC,IAAV,6EAAGD,CAAH,gIASVJ,EAAoBI,IAAOC,IAAV,oFAAGD,CAAH,+CCLjBK,EAAgBL,IAAOC,IAAV,8EAAGD,CAAH,8GAIaM,IAAKC,QAQxBC,EAAQ,aAyCNC,UA7GG,SAAC,GAAuB,IAArBC,EAAqB,EAArBA,KAAqB,EAAfC,SAEzB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAK5B,MAAM,gBACX,kBAACsB,EAAD,KAEE,kBAAC,EAAD,CACItB,MAAQ,8BACRC,KAAO,+GACPC,UAAY,0EACZC,YAAc,sCACdC,MAASuB,EAAKE,UAAUC,kBAG5B,kBAAC,EAAD,CACA9B,MAAQ,gBACRC,KAAO,yJACPC,UAAY,+CAEZ,kBAAC,EAAD,CACAF,MAAQ,aACRC,KAAO,wKACPC,UAAY,oDACZC,YAAc,+BACdC,MAASuB,EAAKI,UAAUD,kBAGxB,kBAAC,EAAD,CACC9B,MAAQ,cACRC,KAAO,qHAER,kBAAC,EAAD,CACAD,MAAO,qBACPC,KAAO,4FACPC,UAAY,kDACZC,YAAc,kDACdC,MAASuB,EAAKK,aAAaF,kBAE3B,kBAAC,EAAD,CACA9B,MAAQ,YACRC,KAAO,mJACPC,UAAY,yCACZC,YAAc,yCACdC,MAASuB,EAAKM,YAAYH,kBAE1B,kBAAC,EAAD,CACA9B,MAAQ,gCACRC,KAAO,uFACPG,MAASuB,EAAKO,SAASJ","file":"component---src-pages-projects-tsx-5b303ce08f5ab2cc1fcf.js","sourcesContent":["import React from \"react\"\n//import { useStaticQuery, graphql } from \"gatsby\"\nimport Image from \"gatsby-image\"\nimport {faEnvelope, faRss} from '@fortawesome/free-solid-svg-icons'\nimport {faLinkedin, faGithub} from '@fortawesome/free-brands-svg-icons'\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport styled from 'styled-components'\nimport {colors, IconContainer} from './layout'\n\n\n\nconst Card = ({title, body, githubUrl = '', liveSiteUrl='' , image = ''}) => {\n\n    return(\n    <CardOuter>\n        <CardImage>\n            {image ? <Image style = {{width: \"13rem\", height: \"10rem\"}} fixed = {image.fixed}/> : '' }\n            {/*<ResizedImg src = {image}/>*/}\n        </CardImage>\n        <CardBody>\n            <h3>{title}</h3>\n            <span>\n                {body}\n            </span>\n        </CardBody>\n        <CardFooter>\n            {liveSiteUrl ? \n            <CardFooterDivider>\n              <a href = {liveSiteUrl}> View live site </a>\n            </CardFooterDivider>\n            : ''\n             }\n             {githubUrl ? \n            <div>\n                <a href = {githubUrl}>\n                    Source <IconContainer><FontAwesomeIcon icon = {faGithub} /> </IconContainer>\n                </a>\n            </div>\n            : ''\n              }\n        </CardFooter>\n\n    </CardOuter>\n\n    )\n}\nexport default Card;\n\n\nconst CardOuter =  styled.div`\nheight:27rem;\nwidth: 13rem;\nbackground-color: ${colors.primary};\ndisplay:flex;\nflex-direction: column;\nmargin-right: 0.5rem;\nmargin-bottom: 2rem;\n`\n\nconst CardBody = styled.div`\npadding:1rem;\nheight: 15rem;\n`\nconst CardImage = styled.div`\nheight:10rem;\nwidth: 100%; \nbackground-color: lightgray;\n`\nconst ResizedImg = styled.img`\n    width: 100%:\n    height:100%;\n    object-fit: contain;\n`\nconst CardFooter = styled.div`\nborder-top: 1px solid black;\nheight: 2rem;\njustify-content:center;\ndisplay:flex;\nalign-items:center;\nbackground-color: lightgray;\n`\n\nconst CardFooterDivider = styled.div`\nmargin-right: 0.8rem;\npadding-right: 0.8rem;\n`","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport styled from 'styled-components'\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport {size} from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { rhythm } from \"../utils/typography\"\nimport {WhoAmIItem, RightPanelItem, NoTopMarginTitle, RightPanelHeader} from \"../components/layout\"\nimport Card from \"../components/projectcard\"\n//TODO This page should be refactored to\n// a - use graphql queries\n// b - use Gatsby-Image for progressive loading\n\nimport RCJAImage from '../../content/assets/projects/rcjarego.png'\nimport PopTrackerImage from '../../content/assets/projects/poptracker.png'\nimport SoccerImage from '../../content/assets/projects/soccerscorer.png'\nimport WeatherImage from '../../content/assets/projects/weatherapp.png'\n\n\nconst BlogIndex = ({ data, location }) => {\n\n  return (\n    <Layout>\n      <SEO title=\"My projects\" />\n      <CardContainer>\n\n        <Card\n            title = \"RCJA National Event Manager\"\n            body = \"The Event Management system for the Robocup Junior Australia National body. Volunteer project done pro-bono.\" \n            githubUrl = \"https://github.com/MelbourneHighSchoolRobotics/RCJA_Registration_System\"\n            liveSiteUrl = \"https://enter.robocupjunior.org.au/\"\n            image = {data.regoImage.childImageSharp}\n        />\n\n        <Card \n        title = \"Slack-Compile\"\n        body = \"A lightweight webserver built with flask, beautiful soup and urllib to scrape,compile and run snippets of code on slack using hackerrank's public api.\"\n        githubUrl = \"https://github.com/Dalordish/slack-compile\"/>\n\n        <Card\n        title = \"This site!\"\n        body = \"The site you're looking at right now was an attempt to ditch css frameworks, do my own UI/UX design with Figma, and use Gatsby/React/Typescript to modernise my site.\"\n        githubUrl = \"https://github.com/Dalordish/dalordish.github.io/\"\n        liveSiteUrl = \"https://dalordish.github.io/\"\n        image = {data.blogImage.childImageSharp}\n        />\n\n        <Card\n         title = \"ClubManager\"\n         body = \"A complex attendance, inventory, management and allocation system for the High School Robotics club I mentor at.\"\n         />\n        <Card\n        title= \"Simple Weather App\"\n        body = \"A simple, minimalist webapp built with JQuery and bootstrap using geoip and weather apis.\"\n        githubUrl = \"https://github.com/Dalordish/Simple-Weather-App\"\n        liveSiteUrl = \"https://dalordish.github.io/Simple-Weather-App/\"\n        image = {data.weatherImage.childImageSharp}\n        />\n        <Card\n        title = \"Roboscore\"\n        body = 'A Game scoring system for the high school robotics competition \"Robocup Junior\". Built using pure javascript and material design lite by google.'\n        githubUrl = \"https://github.com/Dalordish/roboscore\"\n        liveSiteUrl = \"https://dalordish.github.io/roboscore/\"\n        image = {data.soccerImage.childImageSharp}\n        />\n        <Card\n        title = \"PSArchives Population Tracker\"\n        body = \"A population tracker for the popular massively multiplayer online FPS Planetside 2. \"\n        image = {data.popImage.childImageSharp }\n        />\n    </CardContainer>\n    </Layout>\n  )\n}\n\nconst CardContainer = styled.div`\ndisplay:flex;\nflex-direction: row;\nflex-wrap: wrap;\n@media screen and (max-width: ${size.laptop}) {\n    justify-content: center;\n}\n\n`\n\n\n\nexport const query = graphql`\n\nquery {\n      popImage: file(absolutePath: { regex: \"/poptracker.png/\" }) {\n        childImageSharp {\n          fixed(width: 1300, height: 1000) {\n            ...GatsbyImageSharpFixed\n          }\n        }\n      }\n      regoImage: file(absolutePath: { regex: \"/rcjarego.png/\" }) {\n        childImageSharp {\n          fixed(width: 1300, height: 1000) {\n            ...GatsbyImageSharpFixed\n          }\n        }\n      }\n      soccerImage: file(absolutePath: { regex: \"/soccerscorer.png/\" }) {\n        childImageSharp {\n          fixed(width: 1300, height: 1000) {\n            ...GatsbyImageSharpFixed\n          }\n        }\n      }\n      weatherImage: file(absolutePath: { regex: \"/weatherapp.png/\" }) {\n        childImageSharp {\n          fixed(width: 1300, height: 1000) {\n            ...GatsbyImageSharpFixed\n          }\n        }\n      }\n      blogImage: file(absolutePath: { regex: \"/blogphoto.png/\" }) {\n        childImageSharp {\n          fixed(width: 1300, height: 1000) {\n            ...GatsbyImageSharpFixed\n          }\n        }\n      } \n    }\n`\n\nexport default BlogIndex\n"],"sourceRoot":""}